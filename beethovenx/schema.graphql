type MasterChef @entity {
  # Contract address
  id: Bytes!

  #  owner: Bytes!
  #  devAddress: Bytes!
  #  treasuryAddress: Bytes!

  beets: Bytes!
  beetsPerBlock: BigInt!
  totalAllocPoint: BigInt!

  farms: [Farm!] @derivedFrom(field: "masterChef")
  poolCount: BigInt!

  #history: [History!]! @derivedFrom(field: "masterChef")

  timestamp: BigInt!
  block: BigInt!
}

type Farm @entity {
  # Index of pool in poolInfo on MasterChef contract
  id: Bytes!
  masterChef: MasterChef!
  pair: Bytes!

  rewarder: Rewarder

  allocPoint: BigInt!
  lastRewardBlock: BigInt!
  accBeetsPerShare: BigDecimal!

  balance: BigDecimal!

  users: [UserFarmBalance!]! @derivedFrom(field: "farm")
  userCount: Int!

  timestamp: BigInt!
  block: BigInt!
}

type RewardToken @entity {
  id: Bytes!
  rewarder: Rewarder
  token: Bytes!
  decimals: Int!
  symbol: String!
  rewardPerSecond: BigDecimal!
  timestamp: BigInt!
  block: BigInt!
}

type Rewarder @entity(immutable: true) {
  # address
  id: Bytes!
  rewardTokens: [RewardToken!]! @derivedFrom(field: "rewarder")
}

type HarvestAction @entity(immutable: true) {
  id: Bytes!
  user: User
  token: Bytes!
  amount: BigDecimal!
  timestamp: BigInt!
  block: BigInt!
}

type UserFarmBalance @entity {
  id: Bytes!
  user: User!
  farm: Farm!
  balance: BigDecimal!
  timestamp: BigInt!
  block: BigInt!
}

type User @entity(immutable: true) {
  # Pool id concatenated with user address
  id: Bytes!
  address: Bytes!
  farms: [UserFarmBalance!]! @derivedFrom(field: "user")
  vesting : [UserTokenVesting!]! @derivedFrom(field: "user")
  harvests: [HarvestAction!]! @derivedFrom(field: "user")
}

type UserTokenVesting @entity {
  id: Bytes!
  user: User!
  bar: Bar!
  balance: BigDecimal!
  block: BigInt!
  timestamp: BigInt!
}

type Bar @entity {
  id: Bytes!
  address: Bytes!
  decimals: Int!
  name: String!
  vestingToken: Bytes!
  symbol: String!
  totalSupply: BigDecimal!
  ratio: BigDecimal!
  fBeetsMinted: BigDecimal!
  fBeetsBurned: BigDecimal!
  vestingTokenStaked: BigDecimal!
  sharedVestingTokenRevenue: BigDecimal!
  users: [UserFbeetsBalance!]! @derivedFrom(field: "bar")

  block: BigInt!

  timestamp: BigInt!
}

# User
type User @entity {
  # ID
  id: ID!

  address: Bytes!

  # Bar
  bar: Bar

  # fBeets (balance)
  fBeets: BigDecimal!

}
